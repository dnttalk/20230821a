#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('nodejs-03:server');
var http = require('http');

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);
var server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
    console.log('Server running at http://localhost:3000/');
    const { platform } = require('os');
    const { exec } = require('child_process');

    const WINDOWS_PLATFORM = 'win32';
    const MAC_PLATFORM = 'darwin';

    const osPlatform = platform();
    let url = 'http://localhost:3000'
    let command;

    if (osPlatform === WINDOWS_PLATFORM) {
        command = `start chrome --start-fullscreen ${url} --kiosk --incognito --disable-pinch --overscroll-history-navigation=0`;
    }
    console.log(`executing command: ${command}`);
    keySender.sendKey('F11');
    exec(command);
}